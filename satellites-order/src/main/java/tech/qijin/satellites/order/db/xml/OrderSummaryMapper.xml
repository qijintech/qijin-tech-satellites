<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.qijin.satellites.order.db.mapper.OrderSummaryMapper">
  <resultMap id="BaseResultMap" type="tech.qijin.satellites.order.db.model.OrderSummary">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="former_order_id" jdbcType="BIGINT" property="formerOrderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="acct_id" jdbcType="BIGINT" property="acctId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="poi_id" jdbcType="BIGINT" property="poiId" />
    <result column="poi_name" jdbcType="VARCHAR" property="poiName" />
    <result column="poi_type" jdbcType="TINYINT" property="poiType" />
    <result column="recipient_info_id" jdbcType="BIGINT" property="recipientInfoId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="cancel_excuse" jdbcType="VARCHAR" property="cancelExcuse" />
    <result column="cancel_remark" jdbcType="VARCHAR" property="cancelRemark" />
    <result column="reject_excuse" jdbcType="VARCHAR" property="rejectExcuse" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="payment_method" jdbcType="TINYINT" property="paymentMethod" />
    <result column="payment_status" jdbcType="TINYINT" property="paymentStatus" />
    <result column="paid_time" jdbcType="TIMESTAMP" property="paidTime" />
    <result column="payment_id" jdbcType="INTEGER" property="paymentId" />
    <result column="origin_amount" jdbcType="DECIMAL" property="originAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="reduced_amount" jdbcType="DECIMAL" property="reducedAmount" />
    <result column="order_type" jdbcType="TINYINT" property="orderType" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="version" jdbcType="SMALLINT" property="version" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, former_order_id, order_no, acct_id, customer_id, customer_name, poi_id, poi_name, 
    poi_type, recipient_info_id, remark, cancel_excuse, cancel_remark, reject_excuse, 
    city_id, status, payment_type, payment_method, payment_status, paid_time, payment_id, 
    origin_amount, total_amount, order_amount, reduced_amount, order_type, source, version, 
    valid, creator_id, ctime, utime
  </sql>
  <select id="selectByExample" parameterType="tech.qijin.satellites.order.db.model.OrderSummaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_summary
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_summary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tech.qijin.satellites.order.db.model.OrderSummaryExample">
    delete from order_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="tech.qijin.satellites.order.db.model.OrderSummary" useGeneratedKeys="true">
    insert into order_summary (former_order_id, order_no, acct_id, 
      customer_id, customer_name, poi_id, 
      poi_name, poi_type, recipient_info_id, 
      remark, cancel_excuse, cancel_remark, 
      reject_excuse, city_id, status, 
      payment_type, payment_method, payment_status, 
      paid_time, payment_id, origin_amount, 
      total_amount, order_amount, reduced_amount, 
      order_type, source, version, 
      valid, creator_id, ctime, 
      utime)
    values (#{formerOrderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{acctId,jdbcType=BIGINT}, 
      #{customerId,jdbcType=BIGINT}, #{customerName,jdbcType=VARCHAR}, #{poiId,jdbcType=BIGINT}, 
      #{poiName,jdbcType=VARCHAR}, #{poiType,jdbcType=TINYINT}, #{recipientInfoId,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{cancelExcuse,jdbcType=VARCHAR}, #{cancelRemark,jdbcType=VARCHAR}, 
      #{rejectExcuse,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, 
      #{paymentType,jdbcType=TINYINT}, #{paymentMethod,jdbcType=TINYINT}, #{paymentStatus,jdbcType=TINYINT}, 
      #{paidTime,jdbcType=TIMESTAMP}, #{paymentId,jdbcType=INTEGER}, #{originAmount,jdbcType=DECIMAL}, 
      #{totalAmount,jdbcType=DECIMAL}, #{orderAmount,jdbcType=DECIMAL}, #{reducedAmount,jdbcType=DECIMAL}, 
      #{orderType,jdbcType=TINYINT}, #{source,jdbcType=TINYINT}, #{version,jdbcType=SMALLINT}, 
      #{valid,jdbcType=TINYINT}, #{creatorId,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}, 
      #{utime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="tech.qijin.satellites.order.db.model.OrderSummary" useGeneratedKeys="true">
    insert into order_summary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="formerOrderId != null">
        former_order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="acctId != null">
        acct_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="poiId != null">
        poi_id,
      </if>
      <if test="poiName != null">
        poi_name,
      </if>
      <if test="poiType != null">
        poi_type,
      </if>
      <if test="recipientInfoId != null">
        recipient_info_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="cancelExcuse != null">
        cancel_excuse,
      </if>
      <if test="cancelRemark != null">
        cancel_remark,
      </if>
      <if test="rejectExcuse != null">
        reject_excuse,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="paymentStatus != null">
        payment_status,
      </if>
      <if test="paidTime != null">
        paid_time,
      </if>
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="originAmount != null">
        origin_amount,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="reducedAmount != null">
        reduced_amount,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="formerOrderId != null">
        #{formerOrderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="acctId != null">
        #{acctId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="poiId != null">
        #{poiId,jdbcType=BIGINT},
      </if>
      <if test="poiName != null">
        #{poiName,jdbcType=VARCHAR},
      </if>
      <if test="poiType != null">
        #{poiType,jdbcType=TINYINT},
      </if>
      <if test="recipientInfoId != null">
        #{recipientInfoId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cancelExcuse != null">
        #{cancelExcuse,jdbcType=VARCHAR},
      </if>
      <if test="cancelRemark != null">
        #{cancelRemark,jdbcType=VARCHAR},
      </if>
      <if test="rejectExcuse != null">
        #{rejectExcuse,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="paidTime != null">
        #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentId != null">
        #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="originAmount != null">
        #{originAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="reducedAmount != null">
        #{reducedAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=SMALLINT},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tech.qijin.satellites.order.db.model.OrderSummaryExample" resultType="java.lang.Long">
    select count(*) from order_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_summary
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.formerOrderId != null">
        former_order_id = #{record.formerOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.acctId != null">
        acct_id = #{record.acctId,jdbcType=BIGINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.poiId != null">
        poi_id = #{record.poiId,jdbcType=BIGINT},
      </if>
      <if test="record.poiName != null">
        poi_name = #{record.poiName,jdbcType=VARCHAR},
      </if>
      <if test="record.poiType != null">
        poi_type = #{record.poiType,jdbcType=TINYINT},
      </if>
      <if test="record.recipientInfoId != null">
        recipient_info_id = #{record.recipientInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelExcuse != null">
        cancel_excuse = #{record.cancelExcuse,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelRemark != null">
        cancel_remark = #{record.cancelRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectExcuse != null">
        reject_excuse = #{record.rejectExcuse,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.paymentType != null">
        payment_type = #{record.paymentType,jdbcType=TINYINT},
      </if>
      <if test="record.paymentMethod != null">
        payment_method = #{record.paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="record.paymentStatus != null">
        payment_status = #{record.paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.paidTime != null">
        paid_time = #{record.paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentId != null">
        payment_id = #{record.paymentId,jdbcType=INTEGER},
      </if>
      <if test="record.originAmount != null">
        origin_amount = #{record.originAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.reducedAmount != null">
        reduced_amount = #{record.reducedAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=TINYINT},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=SMALLINT},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=TINYINT},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_summary
    set id = #{record.id,jdbcType=BIGINT},
      former_order_id = #{record.formerOrderId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      acct_id = #{record.acctId,jdbcType=BIGINT},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      poi_id = #{record.poiId,jdbcType=BIGINT},
      poi_name = #{record.poiName,jdbcType=VARCHAR},
      poi_type = #{record.poiType,jdbcType=TINYINT},
      recipient_info_id = #{record.recipientInfoId,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      cancel_excuse = #{record.cancelExcuse,jdbcType=VARCHAR},
      cancel_remark = #{record.cancelRemark,jdbcType=VARCHAR},
      reject_excuse = #{record.rejectExcuse,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=SMALLINT},
      payment_type = #{record.paymentType,jdbcType=TINYINT},
      payment_method = #{record.paymentMethod,jdbcType=TINYINT},
      payment_status = #{record.paymentStatus,jdbcType=TINYINT},
      paid_time = #{record.paidTime,jdbcType=TIMESTAMP},
      payment_id = #{record.paymentId,jdbcType=INTEGER},
      origin_amount = #{record.originAmount,jdbcType=DECIMAL},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      reduced_amount = #{record.reducedAmount,jdbcType=DECIMAL},
      order_type = #{record.orderType,jdbcType=TINYINT},
      source = #{record.source,jdbcType=TINYINT},
      version = #{record.version,jdbcType=SMALLINT},
      valid = #{record.valid,jdbcType=TINYINT},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tech.qijin.satellites.order.db.model.OrderSummary">
    update order_summary
    <set>
      <if test="formerOrderId != null">
        former_order_id = #{formerOrderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="acctId != null">
        acct_id = #{acctId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="poiId != null">
        poi_id = #{poiId,jdbcType=BIGINT},
      </if>
      <if test="poiName != null">
        poi_name = #{poiName,jdbcType=VARCHAR},
      </if>
      <if test="poiType != null">
        poi_type = #{poiType,jdbcType=TINYINT},
      </if>
      <if test="recipientInfoId != null">
        recipient_info_id = #{recipientInfoId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cancelExcuse != null">
        cancel_excuse = #{cancelExcuse,jdbcType=VARCHAR},
      </if>
      <if test="cancelRemark != null">
        cancel_remark = #{cancelRemark,jdbcType=VARCHAR},
      </if>
      <if test="rejectExcuse != null">
        reject_excuse = #{rejectExcuse,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="paymentStatus != null">
        payment_status = #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="paidTime != null">
        paid_time = #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentId != null">
        payment_id = #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="originAmount != null">
        origin_amount = #{originAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="reducedAmount != null">
        reduced_amount = #{reducedAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=SMALLINT},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tech.qijin.satellites.order.db.model.OrderSummary">
    update order_summary
    set former_order_id = #{formerOrderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      acct_id = #{acctId,jdbcType=BIGINT},
      customer_id = #{customerId,jdbcType=BIGINT},
      customer_name = #{customerName,jdbcType=VARCHAR},
      poi_id = #{poiId,jdbcType=BIGINT},
      poi_name = #{poiName,jdbcType=VARCHAR},
      poi_type = #{poiType,jdbcType=TINYINT},
      recipient_info_id = #{recipientInfoId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      cancel_excuse = #{cancelExcuse,jdbcType=VARCHAR},
      cancel_remark = #{cancelRemark,jdbcType=VARCHAR},
      reject_excuse = #{rejectExcuse,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      payment_type = #{paymentType,jdbcType=TINYINT},
      payment_method = #{paymentMethod,jdbcType=TINYINT},
      payment_status = #{paymentStatus,jdbcType=TINYINT},
      paid_time = #{paidTime,jdbcType=TIMESTAMP},
      payment_id = #{paymentId,jdbcType=INTEGER},
      origin_amount = #{originAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      reduced_amount = #{reducedAmount,jdbcType=DECIMAL},
      order_type = #{orderType,jdbcType=TINYINT},
      source = #{source,jdbcType=TINYINT},
      version = #{version,jdbcType=SMALLINT},
      valid = #{valid,jdbcType=TINYINT},
      creator_id = #{creatorId,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>